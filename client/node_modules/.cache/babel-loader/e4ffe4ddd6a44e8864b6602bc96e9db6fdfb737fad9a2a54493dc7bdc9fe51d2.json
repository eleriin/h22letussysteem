{"ast":null,"code":"var _jsxFileName = \"/home/ilmar/h22letussysteem/client/src/context/ActiveContext.js\";\nimport React, { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActiveContext = /*#__PURE__*/createContext(true);\nconst ActiveProvider = ({\n  children\n}) => {\n  // For now, it's always true, so no need for state or setters yet.\n  const active = true;\n  return /*#__PURE__*/_jsxDEV(ActiveContext.Provider, {\n    value: active,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = ActiveProvider;\nexport { ActiveContext, ActiveProvider };\nvar _c;\n$RefreshReg$(_c, \"ActiveProvider\");","map":{"version":3,"names":["React","createContext","jsxDEV","_jsxDEV","ActiveContext","ActiveProvider","children","active","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ilmar/h22letussysteem/client/src/context/ActiveContext.js"],"sourcesContent":["import React, { createContext } from \"react\";\n\nconst ActiveContext = createContext(true);\n\nconst ActiveProvider = ({ children }) => {\n  // For now, it's always true, so no need for state or setters yet.\n  const active = true;\n\n  return (\n    <ActiveContext.Provider value={active}>\n      {children}\n    </ActiveContext.Provider>\n  );\n};\n\nexport { ActiveContext, ActiveProvider };"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,gBAAGH,aAAa,CAAC,IAAI,CAAC;AAEzC,MAAMI,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC;EACA,MAAMC,MAAM,GAAG,IAAI;EAEnB,oBACEJ,OAAA,CAACC,aAAa,CAACI,QAAQ;IAACC,KAAK,EAAEF,MAAO;IAAAD,QAAA,EACnCA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACC,EAAA,GATIT,cAAc;AAWpB,SAASD,aAAa,EAAEC,cAAc;AAAG,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}